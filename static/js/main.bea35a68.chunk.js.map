{"version":3,"sources":["actions.js","logo.svg","App.js","reducer.js","index.js"],"names":["HEADER_BTN_CLICK","e","type","payload","task","currentTarget","dataset","target","List","data","className","title","items","map","item","style","background","color","text","id","connect","state","lists","dispatch","bindActionCreators","actions","src","logo","alt","onClick","s","rng","Math","sin","floor","toColor","number","leftPad","toString","generateList","green","_","shuffle","range","val","index","red","generateItem","random","min","max","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","sortBy","list","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bea35a68.chunk.js","sourcesContent":["export default {\n  HEADER_BTN_CLICK (e) {\n    return {\n      type: 'HEADER_BTN_CLICK',\n      payload: {\n        task: e.currentTarget.dataset.task,\n        target: e.currentTarget.dataset.target\n      }\n    }\n  }\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport actions from './actions'\nimport logo from './logo.svg';\n\nfunction List ({data}) {\n  return (\n    <div className=\"list\">\n      <h2 className=\"list-heading\">{data.title}</h2>\n      <ul className=\"list-ul\">\n        {data.items.map(item => \n          <li className=\"list-li\" key={item.id} style={{background:item.color}}>\n            {item.text}\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nfunction App ({lists, HEADER_BTN_CLICK}) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">React Sync</h1>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"color\" data-target=\"cols\">Sort Cols Color</button>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"color\" data-target=\"rows\">Sort Rows Color</button>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"color\" data-target=\"both\">Sort Both Color</button>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"text\" data-target=\"cols\">Sort Cols Text</button>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"text\" data-target=\"rows\">Sort Rows Text</button>\n        <button onClick={HEADER_BTN_CLICK} className=\"header-btn\" data-task=\"text\" data-target=\"both\">Sort Both Text</button>\n      </header>\n      <div className=\"lists\">\n        {lists && lists.map(data => \n          <List\n            data={data}\n            key={data.id}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    lists: state.lists\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(actions, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import _ from 'underscore'\nimport leftPad from 'left-pad'\n\nfunction RNG (s) {\n  return function() {\n    s = Math.sin(s) * 10000; return s - Math.floor(s);\n  };\n};\n\nconst rng = RNG(42);\n_.random = function(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(rng() * (max - min + 1));\n};\n\nfunction toColor (number) {\n  return leftPad(\n    Math.floor(number * 255).toString(16), 2, '0'\n  )\n}\n\nfunction generateItem (val, red, green) {\n  return {\n    id: val,\n    text: val,\n    color: `#${toColor(red)}${toColor(green)}ff`\n  }\n}\n\nfunction generateList (id, green) {\n  const itemCount = 150\n  const items = _.shuffle(\n      _.range(itemCount)\n    )\n    .map((val, index) => {\n      return generateItem(index, val/itemCount, green)\n    })\n  return {\n    id: toColor(green),\n    title: id,\n    items: items\n  }\n}\n\nfunction generateState () {\n  const listsCount = 200\n  const lists = _.shuffle(\n      _.range(listsCount)\n    )\n    .map((val, index) => {\n      return generateList(index, val/listsCount)\n    })\n  return lists\n}\n\nexport default function reducer (state, action) {\n  if (!state) {\n    return {lists: generateState()}\n  }\n\n  if (action.type === 'HEADER_BTN_CLICK') {\n    const {task, target} = action.payload;\n    let lists = state.lists\n    if (target === 'cols' || target === 'both') {\n      if (task === 'text') {\n        lists = _.sortBy(lists, 'title')\n      } else if (task === 'color') {\n        lists = _.sortBy(lists, 'id')\n      }\n    }\n\n    if (target === 'rows' || target === 'both') {\n      if (task === 'text') {\n        lists = lists.map(list => ({\n          ...list,\n          items: _.sortBy(list.items, 'text')\n        }))\n      } else if (task === 'color') {\n        lists = lists.map(list => ({\n          ...list,\n          items: _.sortBy(list.items, 'color')\n        }))\n      }\n    }\n    return {...state, lists}\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\n\nimport App from './App';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport reducer from './reducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst middlewares = [] // Add as and when needed.\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}